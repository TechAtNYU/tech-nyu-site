@import "breakpoint";

/******************** COLORS ********************/

$background: #FFF;
$textColor: #333;

$sectionColors: hsl(13, 67%, 51%) hsl(42, 90%, 49%) hsl(140, 74%, 37%) hsl(218, 66%, 36%) hsl(275, 46%, 33%) hsl(0, 0%, 10%);
$sectionColAlt: hsl(13, 73%, 53%) hsl(42, 90%, 49%) hsl(140, 74%, 35%) hsl(218, 66%, 36%) hsl(271, 48%, 35%) hsl(0, 0%, 10%); 

$navActiveTextColor: hsl(0,0%,97%);
$navInactiveTextColors: hsl(13, 2%, 16%), hsl(0, 0%, 16%), hsl(0, 0%, 20%), hsl(30, 10%,65%), hsl(30,10%,60%), hsl(0,0%,58%);
/*************** RWD ******************/
$responsiveConfig: (
    scale: 14px 16px 19px 24px 30px 36px 44px 58px 64px,
    baseFontSize: 19px,
    baseLineHeight: 27px,
    baseMeasureWidth: 500px, //the measure based on which the baseLineHeight was chosen.
    designs: (
        (   name: desktop,
            baseWidth: 1010px,
            minWidth: 970px,
            maxWidth: 1400px,
            transforms: ()
        ),
        (
            name: mobile,
            baseWidth: 320px
        )
    )
);


/******************* WIDTHS ********************/

$navFlagWidths: (210px 155px 215px 185px 135px);
$totalFlagsWidth: sum($navFlagWidths);
$calendarFlagWidth: 90px;
$navMaxWidth: $totalFlagsWidth + $calendarFlagWidth + 100px;
$constrainNavWidth: false;

//Variables to sort/remove
$homepageLeftColMinWidth: 24em;
$upcomingHeight: 13em;
$fixedWidthHomepageLeftCol: false;



$logoStartColor: hsl(0,0, 95%);
$logoEndColor: hsl(0, 0, lightness(nth($navInactiveTextColors, 1)));

$logoStartBackground: rgba(255, 255, 255, 0);
$logoEndBackground: nth($sectionColors, 1);

$outerPadding: 30px;

$logoStartTop: 3em;
$logoStartWidth: 211px;
$logoStartHeight: $logoStartWidth/3.2558;
$logoEndWidth: 140px;
$logoEndHeight: $logoEndWidth/3.2558;


/********** TYPORGRAPHY (PRE-SCALING) **********/

$hyphenate-body: false;
$use-opentype-features: true;

$headingStack: "ff-meta-web-pro";
$bodyStack: "franklin-gothic-urw";

$scale:         9px 11px 12px 13px 16px 18px 24px 26px 34px 48px 58px 64px 74px 84px;
$line-heights: 11px 14px 16px 18px 20px 22px 24px 32px 38px 42px 60px 76px 90px 110px;

$base-font-size: 16px;
$base-line-height: 24px;
$base-measure-width: 450px;
$base-design-width: 750px;


/******* RESPONSIVE (TYPORGRAPHY) SETTINGS ******/
$mq-widths: $base-design-width 860px 950px 1050px;


//types of elements. useful for setting margins etc
$sectioning-elements: section, article, nav;

@mixin to-in-flow-elems {
	p, dl, ol, ul, li, dl, dt, dd, blockquote, figure, pre, table {
		@content;
	}
}

@mixin to-sectioning-elems {
	article, section, header, footer, nav {
		@content;
	}
}

@mixin flex-container($inline: false, $wrap: true) {
  @if $inline==false {
	  display: -webkit-box;      /* OLD - iOS 6-, Safari 3.1-6 */
	  display: -moz-box;         /* OLD - Firefox 19- (buggy but mostly works) */
	  display: -ms-flexbox;      /* TWEENER - IE 10 */
	  display: -webkit-flex;     /* NEW - Chrome */
	  display: flex;             /* NEW, Spec - Opera 12.1, Firefox 20+ */
  }
  
  @if $wrap == true {
     flex-wrap: wrap;
  }
}

@function img($component, $file) {
  @return "../img/components/#{$component}/#{$file}"
}

/** Supported types: lining, tabular, oldstyle */
@mixin numeral-type($type: lining) {

	$short: if($type=='lining', l, if($type=='tabular', t, o)); //next version: str-slice($type,0,1);
 
	font-variant-numeric: #{$type}-nums; 
	-moz-font-feature-settings: "#{$short}num=1"; 
	-ms-font-feature-settings: "#{$short}num"; 
	//-webkit-font-feature-settings: "#{$short}num";  //can't use this or chrome starts bugging out.
	-o-font-feature-settings: "#{$short}num";
	font-feature-settings: "#{$short}num";
}


@function toHslString($color, $addAlpha: false) {
    $h: hue($color);
    $s: saturation($color);
    $l: lightness($color);
    $a: alpha($color);

    @return unquote("hsl" + if($addAlpha, "a", "") + "(" + $h/1deg + ", " + $s + ", " + $l + if($addAlpha, ", " + $a, "") + ")");
}

@function toRgbString($color, $addAlpha: false) {
    $r: red($color);
    $g: green($color);
    $b: blue($color);
    $a: alpha($color);

    @return unquote("rgb" + if($addAlpha, "a", "") + "("  + $r + ", " + $g + ", " + $b + if($addAlpha, ", " + $a, "") + ")");
}