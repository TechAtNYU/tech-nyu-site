@import "../base";

$headerAnimEnd: 350;
$navCascadeStart: 150;
$navCascadeEnd: $headerAnimEnd - 20;
$leftColOut: $navCascadeStart;

//$navCascadeStart + $navCascadeItemDelay*5 + $navCascadeDrop; must add up to $navCascadeEnd
$navCascadeItemDelay: 32;
$navCascadeDrop: 20;

$firstPanelUpStart: $navCascadeEnd - 165;
$firstPanelUpEnd: $firstPanelUpStart + 100;
$colorChangeLength: 35;

@mixin ease($property, $easing, $value) {
   #{$property + "["+ $easing + "]"}: $value;
}

@function toHslString($color, $addAlpha: false) {
    $h: hue($color);
    $s: saturation($color);
    $l: lightness($color);
    $a: alpha($color);

    @return unquote("hsl" + if($addAlpha, "a", "") + "(" + $h/1deg + ", " + $s + ", " + $l + if($addAlpha, ", " + $a, "") + ")");
}

@function toRgbString($color, $addAlpha: false) {
    $r: red($color);
    $g: green($color);
    $b: blue($color);
    $a: alpha($color);

    @return unquote("rgb" + if($addAlpha, "a", "") + "("  + $r + ", " + $g + ", " + $b + if($addAlpha, ", " + $a, "") + ")");
}

@-skrollr-keyframes scrollCueFadeOut {
    #{$firstPanelUpStart} {
        opacity: 1;
    }
    #{$firstPanelUpEnd} {
        opacity: 0;
    }
}

@for $i from 1 through 7 {
  @if($i != 7) {
    @-skrollr-keyframes navCascadeDown-#{$i} {
        #{$navCascadeStart + ($i - 1)*$navCascadeItemDelay} {
            @include ease(margin-top, sqrt, -80px);

            //calendar must invert as it's falling down, not after
            //because there is no next element to drop
            @if($i==6) {
                background-color: toRgbString(nth($sectionColors,$i), true);
                //color: toHslString($navActiveTextColor);
            }
        }

        #{$navCascadeStart + ($i - 1)*$navCascadeItemDelay + $navCascadeDrop} {
            @include ease(margin-top, sqrt, 0px);
            background-color: toRgbString(nth($sectionColors, $i), true);
            //color: toHslString($navActiveTextColor);

            @if($i==6) {
                background-color: toRgbString(nth($sectionColors, 1), true);
            }
        }

        #{$navCascadeStart + ($i - 1)*$navCascadeItemDelay + $navCascadeDrop + 20} {
            dummy: true;
        }

        @if($i!=6) {
            #{$navCascadeStart + $i*$navCascadeItemDelay + $navCascadeDrop} {
               background-color: toRgbString(nth($sectionColors, 1), true);
               //@if($i!=1) { color: toHslString($navInactiveTextColor); }
            }
        }

        #{$headerAnimEnd} {
           background-color: toRgbString(nth($sectionColors, 1), true);
        }

        #{$headerAnimEnd+1} {
           background-color: toRgbString(transparentize(nth($sectionColors, 1), 1), true);
        }
    }

    nav li:nth-of-type(#{$i}) {
      -skrollr-animation-name: navCascadeDown-#{$i};
    }
  }
}

#scrollCue {
   -skrollr-animation-name: scrollCueFadeOut;
}
