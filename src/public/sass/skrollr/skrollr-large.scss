@import "../base";

$headerAnimEnd: 350;
$navCascadeStart: 150;
$navCascadeEnd: $headerAnimEnd - 20;
$leftColOut: $navCascadeStart;

//$navCascadeStart + $navCascadeItemDelay*5 + $navCascadeDrop; must add up to $navCascadeEnd
$navCascadeItemDelay: 32; 
$navCascadeDrop: 20;

$onPanelPause: 85;
$interPanelDistance: 100;
$firstPanelExtraPause: 120;
$firstPanelUpStart: $navCascadeEnd - 165;
$firstPanelUpEnd: $firstPanelUpStart + $interPanelDistance;
$colorChangeStartDelay: 55;

@mixin ease($property, $easing, $value) {
   #{$property + "["+ $easing + "]"}: $value;
}

@function toHslString($color, $addAlpha: false) {
    $h: hue($color);
    $s: saturation($color);
    $l: lightness($color);
    $a: alpha($color);

    @return unquote("hsl" + if($addAlpha, "a", "") + "(" + $h/1deg + ", " + $s + ", " + $l + if($addAlpha, ", " + $a, "") + ")");
}

@function toRgbString($color, $addAlpha: false) {
    $r: red($color);
    $g: green($color);
    $b: blue($color);
    $a: alpha($color);

    @return unquote("rgb" + if($addAlpha, "a", "") + "("  + $r + ", " + $g + ", " + $b + if($addAlpha, ", " + $a, "") + ")");
}

@-skrollr-keyframes logoToTopLeft {
    0 {
        @include ease(width, cubedroot, ems($logoStartWidth));
        @include rs((
          padding-left: $outerPaddingPx + 2px,
          padding-right: $outerPaddingPx + 2px
        ), $fallback: false);
    }

    #{$navCascadeEnd - 50} {
      @include ease(width, cubedroot, ems($logoEndWidth));
      @include rs((
        padding-left: $outerPaddingPx,
        padding-right: $outerPaddingPx
      ), $fallback: false);
    }
}

@-skrollr-keyframes logoRestyleToTopBar {
    0 {
        @include ease(fill, sqrt, toHslString($logoStartColor));
    }
    #{$navCascadeEnd - 50} {
        @include ease(fill, sqrt, toHslString($logoEndColor));
    }

    @for $i from 1 through 5 {
        @if($i==1) {
          #{$firstPanelUpEnd + $firstPanelExtraPause + $i*($interPanelDistance + $onPanelPause)} {
            fill: toHslString(nth($navInactiveTextColors, $i+1));
          }
        }
          #{$firstPanelUpEnd + $firstPanelExtraPause + $i*($interPanelDistance + $onPanelPause) + $onPanelPause + $colorChangeStartDelay} {
            dummy: true;
          }
        @if($i!=5) {
          #{$firstPanelUpEnd + $firstPanelExtraPause + ($i+1)*($interPanelDistance + $onPanelPause)} {
            fill: toHslString(nth($navInactiveTextColors, $i+2));
          }
        }
    }    
}


@-skrollr-keyframes calendarSetHeaderColor {
    #{$navCascadeEnd - $navCascadeDrop} {
        fill: toHslString($navActiveTextColor);
    }

    #{$navCascadeEnd} {
        fill: toHslString(nth($navInactiveTextColors, 1));
    }

    @for $i from 1 through 4 {
        @if($i==1) {
          #{$firstPanelUpEnd + $firstPanelExtraPause + $i*($interPanelDistance + $onPanelPause)} {
            fill: toHslString(nth($navInactiveTextColors, $i+1));
          }
        }
          #{$firstPanelUpEnd + $firstPanelExtraPause + $i*($interPanelDistance + $onPanelPause) + $onPanelPause + $colorChangeStartDelay} {
            dummy: true;
          }
        @if($i!=5) {
          #{$firstPanelUpEnd + $firstPanelExtraPause + ($i+1)*($interPanelDistance + $onPanelPause)} {
            fill: toHslString(nth($navInactiveTextColors, $i+2));
          }
        }
    }
}

@-skrollr-keyframes scrollCueFadeOut {
    #{$firstPanelUpStart} {
        opacity: 1;
    }
    #{$firstPanelUpEnd} {
        opacity: 0;
    }
}

@-skrollr-keyframes sectionStarter {
  #{$firstPanelUpStart} {
    top: 100%;
    position: fixed;
    margin-top: 0px;
  }

  #{$firstPanelUpEnd} {
    top: 0%;
    position: fixed;
    margin-top: $headerAnimEnd+"px";
  }

  #{$firstPanelUpEnd + 1} {
    position: static;
  }
}

@for $i from 1 through 7 {
  @if($i != 7) {
    @-skrollr-keyframes navCascadeDown-#{$i} {
        #{$navCascadeStart + ($i - 1)*$navCascadeItemDelay} {
            @include ease(margin-top, sqrt, -80px);

            //calendar must invert as it's falling down, not after
            //because there is no next element to drop
            @if($i==6) { 
                background-color: toRgbString(nth($sectionColors,$i), true);
                //color: toHslString($navActiveTextColor);
            }
        }

        #{$navCascadeStart + ($i - 1)*$navCascadeItemDelay + $navCascadeDrop} {
            @include ease(margin-top, sqrt, 0px);
            background-color: toRgbString(nth($sectionColors, $i), true);
            //color: toHslString($navActiveTextColor);

            @if($i==6) {
                background-color: toRgbString(nth($sectionColors, 1), true);
            }
        }

        #{$navCascadeStart + ($i - 1)*$navCascadeItemDelay + $navCascadeDrop + 20} {
            dummy: true;
        }

        @if($i!=6) {
            #{$navCascadeStart + $i*$navCascadeItemDelay + $navCascadeDrop} {
               background-color: toRgbString(nth($sectionColors, 1), true);
               //@if($i!=1) { color: toHslString($navInactiveTextColor); }
            }
        }

        #{$headerAnimEnd} {
           background-color: toRgbString(nth($sectionColors, 1), true);
        }

        #{$headerAnimEnd+1} {
           background-color: toRgbString(transparentize(nth($sectionColors, 1), 1), true);
        }
    }

    nav li:nth-of-type(#{$i}) {
      -skrollr-animation-name: navCascadeDown-#{$i};
    }
  }

  $animStartDelay: 20;
  @-skrollr-keyframes photo-#{$i} {
    //tell the sass compiler these vars will exist.
    $startKf: 0;
    $preShowStayKf: dummy;
    $showKf: dummy;
    $stayKf: dummy;
    $hideKf: dummy;
    $easing: if($i==2, swing5, linear);

    @if($i==1) {
      $showKf: 0;
      $hideKf: $navCascadeEnd+50;
    } 
    @else {
      $preShowStayKf: $firstPanelUpStart + ($i - 2)*($interPanelDistance + $onPanelPause) + $firstPanelExtraPause;
      $showKf: $preShowStayKf + $interPanelDistance - if($i==2, $firstPanelExtraPause, 0);
      $stayKf: $showKf + $onPanelPause + 10 + if($i==2, $firstPanelExtraPause, 0);
      $hideKf: $stayKf + $interPanelDistance;
    }

    $direction: if($i%2==0, left, right);

    #{$startKf} {
      @include ease($direction, $easing, -100%);
      @include ease(top, $easing, 100%);
      @if($direction==left) {
        right: 60%;
      }
    }

    @if($i!=1) {
      #{$preShowStayKf} {
        dummy: true;
      }
    }

    #{$showKf} {
      @include ease($direction, $easing, 0%);
      @include ease(top, $easing, 0%);
      overflow: hidden;
    }

    #{$stayKf} {
      dummy: true;
    }

    @if($i!=7) {
      #{$hideKf} {
        #{$direction}:-100%;
        top:100%;
        @if($direction==left) {
          right: 60%;
        }
      }
    }
  }

  .bg.starter {
      -skrollr-animation-name: photo-1;
  }

  @if($i!=7) {
    .objective:nth-of-type(#{$i}) .bg {
        //-skrollr-animation-name: photo-#{$i+1};
    }
  }
}

nav {
  -skrollr-animation-name: headerAddBoxShadowAndColorChange;

  .calendar path {
    fill: inherit !important;
  }
}

#logo {
  -skrollr-animation-name: logoToTopLeft;
  svg path {
    -skrollr-animation-name: logoRestyleToTopBar;
  }
}

#scrollCue {
   -skrollr-animation-name: scrollCueFadeOut;
}